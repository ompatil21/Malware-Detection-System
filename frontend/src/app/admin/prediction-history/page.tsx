"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation"; // For client-side navigation
import axios from "axios";

interface Prediction {
    email: string;
    filename: string;
    prediction: string;
    timestamp: string;
}

export default function AdminPredictionHistory() {
    const [predictions, setPredictions] = useState<Prediction[]>([]); // State to store all predictions
    const [error, setError] = useState<string | null>(null); // Error state
    const router = useRouter();

    useEffect(() => {
        const fetchAllPredictionHistory = async () => {
            const token = localStorage.getItem("token");

            if (!token) {
                router.push("/login");
                return;
            }

            try {
                // Fetch all prediction history (admin route)
                const response = await axios.get("http://localhost:5000/api/prediction-history", {
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                });

                setPredictions(response.data); // Set predictions from response
            } catch (err) {
                console.error("Error fetching prediction history:", err);
                setError("Failed to load prediction history.");
            }
        };

        fetchAllPredictionHistory();
    }, [router]);

    return (
        <div className="min-h-screen flex items-center justify-center bg-gray-100">
            <div className="w-full max-w-4xl bg-white shadow-md rounded-lg p-8">
                <h1 className="text-3xl font-bold mb-6 text-center text-gray-800">All User Predictions</h1>

                {error && <p className="text-red-500 text-center">{error}</p>}

                {/* Show predictions in a table */}
                <table className="w-full table-auto">
                    <thead>
                        <tr>
                            <th className="px-4 py-2">User Email</th>
                            <th className="px-4 py-2">Filename</th>
                            <th className="px-4 py-2">Prediction</th>
                            <th className="px-4 py-2">Timestamp</th>
                        </tr>
                    </thead>
                    <tbody>
                        {predictions.length > 0 ? (
                            predictions.map((prediction, index) => (
                                <tr key={index}>
                                    <td className="border px-4 py-2">{prediction.email}</td>
                                    <td className="border px-4 py-2">{prediction.filename}</td>
                                    <td className="border px-4 py-2">{prediction.prediction}</td>
                                    <td className="border px-4 py-2">{new Date(prediction.timestamp).toLocaleString()}</td>
                                </tr>
                            ))
                        ) : (
                            <tr>
                                <td colSpan={4} className="text-center py-4">
                                    No prediction history available.
                                </td>
                            </tr>
                        )}
                    </tbody>
                </table>
            </div>
        </div>
    );
}
