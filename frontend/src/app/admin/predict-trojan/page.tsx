"use client";
import { useState } from 'react';
import axios from 'axios';

// Define the PredictionResult type
interface PredictionResult {
    prediction: string;
}

export default function PredictTrojan() {
    const [inputData, setInputData] = useState('');
    const [result, setResult] = useState<PredictionResult | null>(null); // Set initial state to null

    const handlePredict = async () => {
        try {
            const response = await axios.post<PredictionResult>('http://localhost:5000/api/predict-trojan', { data: inputData });
            setResult(response.data);  // Set the result based on the API response
        } catch (error) {
            console.error('Error predicting Trojan:', error);
        }
    };

    return (
        <div>
            <h1 className="text-3xl font-bold mb-6">Predict Trojan</h1>
            <textarea
                value={inputData}
                onChange={(e) => setInputData(e.target.value)}
                className="w-full p-4 border border-gray-300 rounded"
                placeholder="Enter system data here..."
            />
            <button onClick={handlePredict} className="mt-4 px-4 py-2 bg-blue-500 text-white rounded">Run Prediction</button>

            {result && (
                <div className="mt-6 p-4 bg-gray-100 rounded">
                    <h2 className="text-2xl font-semibold">Prediction Result</h2>
                    <p>{result.prediction}</p>  {/* Now TypeScript knows 'prediction' exists */}
                </div>
            )}
        </div>
    );
}
